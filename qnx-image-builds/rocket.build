###########################################################################
##
## QNX Neutrino 7.1 on the Raspberry Pi 4 (Armv8-A Cortex-A72 core) Board
##
###########################################################################

[-optional]
[-compress]
[image=0x80000]
[virtual=aarch64le,raw] .bootstrap = {
    # Startup parameters
    #  '-W[timeout]' -> enable watchdog. Make sure wdtkick is also uncommented in
    #          the build script if -W parameter is specified. Timeout value is in ms before reset.
    #  '-D' -> Specify debug port to be used for console debug output
    #          during startup. Default is miniuart(uart1)

    [+keeplinked] startup-bcm2711-rpi4 -v -D miniuart -W 2500
    # to use uart3 as console debug port, comment out line above, and uncomment line below
    #startup-bcm2711-rpi4 -v -D pl011-3 -W 2500
    [+keeplinked] PATH=/proc/boot:/bin:/usr/bin:/sbin:/usr/sbin: LD_LIBRARY_PATH=/proc/boot:/lib:/usr/lib:/lib/dll procnto-smp-instr -v
}

[+script] .script = {

    display_msg This is the CUInSpace minimal rocket build for running the QNX Stack telemetry system.

    # Setup Environment variables
    ENV=/etc/profile

    # Start some common servers
    slogger2
    dumper -d /dev/shmem &

    #######################################################################
    ## WatchDog utility
    ## If startup is given '-W' parameter then the 'wdtkick' utility MUST
    ## be uncommented below.
    ## '0x24:0x5A028e4c' -> Specify the timeout value (the lower 20bits) of
    ## PM_WDOG register to 2500 ms ((2500 x 67)|0x5a000000)
    #######################################################################
    display_msg Starting watchdog...
    wdtkick -W0x24:0x5A028E4C -W0x1c:0x5A000020

    #######################################################################
    ## UART drivers
    #######################################################################
    display_msg "Starting serial driver (/dev/ser1)"
    devc-serminiuart -b115200 -c500000000 -e -F -u1 0xfe215000,125
    waitfor /dev/ser1 4
    reopen /dev/ser1

    display_msg "Starting serial driver (/dev/ser3) for UART3 at baud 57600"
    devc-serpl011 -b57600 -c48000000 -e -F -s -u3 0xfe201600,153
    waitfor /dev/ser3 10
    # to use uart3 as console debug port, comment out line "reopen /dev/ser1" above, and uncomment line below
    #reopen /dev/ser3

    #######################################################################
    ## I2C driver
    #######################################################################
    display_msg Starting I2C driver (/dev/i2c1)...
    i2c-bcm2711 -p0xfe804000 --b100000 --u1

    #######################################################################
    ## SD memory card driver
    ## Note: "bmstr_base" option is required for busmaster memory
    ## address translation
    #######################################################################
    display_msg Starting SDMMC driver for SD card (SDIO0)...
    #devb-sdmmc-bcm2711 mem name=below1G sdio addr=0xfe340000,irq=158,bs=bmstr_base=0xc0000000 disk name=sd
    devb-sdmmc-bcm2711 sdio addr=0xfe340000,irq=158 disk name=sd
    waitfor /dev/sd0t12.1
    mount -t dos /dev/sd0t12.1 /

    ###########################################################################
	## Message queue server
	###########################################################################
	mqueue
    waitfor /dev/mqueue
    
    #######################################
    ## Start telemetry
    #######################################
    sh /etc/telemetry.sh

    # Drop into debug shell
    [+session] ksh &
}

# Redirect console messages
[type=link] /bin/sh=/bin/ksh
[type=link] /dev/console=/dev/ser1
# to use uart3 as console debug port, comment out line "[type=link] /dev/console=/dev/ser1" above, and uncomment line below
#[type=link] /dev/console=/dev/ser3
[type=link] /tmp=/dev/shmem
[type=link] /var/log=/tmp
[type=link] /usr/tmp=/tmp
[type=link] /var/run/wpa_supplicant=/dev/shmem
[type=link] /etc/resolv.conf=/tmp/resolv.conf

###########################################################################
## Shared Libraries
###########################################################################
/usr/lib/ldqnx-64.so.2=ldqnx-64.so.2
libc.so
libgcc_s.so
qcrypto-openssl.so
libregex.so
libqh.so
libm.so
libz.so
libpps.so

###########################################################################
## Slogger2
###########################################################################
libslog2.so
libslog2parse.so

###########################################################################
## Tracelog
###########################################################################
libtracelog.so

###########################################################################
## BLOCK driver
###########################################################################
libcam.so
io-blk.so
cam-disk.so
fs-qnx6.so
fs-dos.so
fs-ext2.so
libncursesw.so

###########################################################################
## NETWORK driver
## Note: To build the IFS with WIFI support, please install
##       the "Wireless driver for the Broadcom BCM4339" package
###########################################################################
#/lib/dll/devnp-genet.so=devnp-genet.so
#/lib/dll/devnp-qwdi-2.9_bcm4339-rpi4.so=devnp-qwdi-2.9_bcm4339-rpi4.so
#
#libssl.so
#libsocket.so
#libcrypto.so
libqcrypto.so
#libnbutil.so
#librpc.so
libsecpol.so

###########################################################################
## Message queue server
###########################################################################
/sbin/mqueue=mqueue

###########################################################################
## SPI driver
###########################################################################
spi-bcm2711.so

###########################################################################
## Serial driver
###########################################################################
/sbin/devc-serminiuart=devc-serminiuart
/sbin/devc-serpl011=devc-serpl011

###########################################################################
## libqcrypto support
###########################################################################
[perms=644] /etc/qcrypto.conf = {
openssl     tags=*
}

###########################################################################
## dhclient support
###########################################################################
/sbin/dhclient=dhclient
[search=${QNX_TARGET}/sbin perms=a+x] /sbin/dhclient-script=dhclient-script
[search=${QNX_TARGET}/etc]/etc/dhclient.conf=dhclient.conf

# Enabled Username/Password: root/root, qnxuser/qnxuser
[uid=0 gid=0 perms=0600] /etc/shadow = {
root:@S@NKlWES1quMp1wmqugkUSnFEpPGn58kIs4wQOgDDNs06vimR+bbGPUKM+9P6jbFUzo3Rm+Qe5MS+17xKhwaeJEg==@Mjg5ZTJiMTM0YTRjYTE2ZGFjMDdhZTFlY2NlMDVmNmE=:1468494669:0:0
qnxuser:@S@HZERXjgixvb3157FFeraShhvTVw+10ccUtVUVZbi0fUwpzlzBZFw5gHiFd1XHKit8D39Whe749XAY8fV4P5ANQ==@Y2ZlOTg3M2RhNTM4Y2M2ODY0OWZhODdiNDRkMmU5Nzg=:1468488235:0:0
}

[uid=0 gid=0 perms=0644] /etc/group = {
root:x:0:root
sshd:x:6:sshd
qnxuser:x:1000:qnxuser
}

###########################################################################
## disk commands
###########################################################################
/sbin/chkqnx6fs=chkqnx6fs
/bin/df=df
/bin/du=du
/sbin/fdisk=fdisk
/sbin/mkdosfs=mkdosfs
/sbin/mkqnx6fs=mkqnx6fs
/bin/mount=mount
/bin/umount=umount

###########################################################################
## Block driver
###########################################################################
/sbin/devb-sdmmc-bcm2711=devb-sdmmc-bcm2711

###########################################################################
## I2C driver
###########################################################################
/sbin/i2c-bcm2711=i2c-bcm2711

###########################################################################
## WatchDog utility
###########################################################################
/bin/wdtkick=wdtkick

###########################################################################
## GPIO utility
###########################################################################
/bin/gpio-bcm2711=gpio-bcm2711

###########################################################################
## general commands
###########################################################################
/usr/bin/awk=awk
/bin/cat=cat
/bin/chmod=chmod
/usr/bin/cksum=cksum
/bin/cp=cp
/bin/dd=dd
/sbin/devb-ram=devb-ram
/sbin/devb-umass=devb-umass
/usr/sbin/dumper=dumper
/bin/echo=echo
/bin/tee=tee
/usr/bin/hogs=hogs
/bin/hostname=hostname
/sbin/io=io
/bin/isend=isend
/bin/isendrecv=isendrecv
/usr/bin/ldd=ldd
/bin/ln=ln
/bin/ls=ls
/bin/mkdir=mkdir
/bin/mv=mv
/bin/on=on
/bin/pidin=pidin
/usr/sbin/random=random
/bin/rm=rm
/sbin/route=route
/usr/bin/setconf=setconf
/sbin/shutdown=shutdown
/bin/slay=slay
/bin/slog2info=slog2info
/bin/slogger2=slogger2
/bin/stty=stty
/usr/bin/top=top
/bin/uname=uname
/usr/bin/use=use
/bin/waitfor=waitfor
/bin/touch=touch
/bin/sh=sh
/bin/ksh=ksh

###########################################################################
## TELEMETRY SYSTEM BINARIES
## You will need to copy the compiled binaries to the prebuilt/aarch64lw/bin folder in this project
###########################################################################

[perms=0777] /etc/telemetry.sh = {
    echo "Starting CU InSpace telemetry system..."

    echo "Starting fetcher..."
    fetcher /dev/i2c1 2> fetcher.log &

    echo "Starting packager..."
    packager VA3INI 2> packager.log &

    echo "Starting plogger..."
    plogger -o red_ballistic.mission 2> plogger.log &

    echo "Starting broadcaster..."
    broadcaster /dev/ser3 2> broadcaster.log &
}

/bin/packager=packager
/bin/fetcher=fetcher
/bin/broadcaster=broadcaster
/bin/plogger=plogger

###########################################################################
## END OF BUILD SCRIPT
###########################################################################
